// рззя╕ПтГг JSON ржбрж╛ржЯрж╛ ржкрж╛рж░рзНрж╕ ржХрж░рж╛рж░ ржЬржирзНржп dart:convert ржЗржоржкрзЛрж░рзНржЯ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
import 'dart:convert';

// рзия╕ПтГг HTTP ржЕржирзБрж░рзЛржз (GET, POST ржЗрждрзНржпрж╛ржжрж┐) ржкрж╛ржарж╛ржирзЛрж░ ржЬржирзНржп http ржкрзНржпрж╛ржХрзЗржЬ ржЗржоржкрзЛрж░рзНржЯ
import 'package:http/http.dart' as http;

// рзйя╕ПтГг ProductModel ржХрзНрж▓рж╛рж╕ (ржбрж╛ржЯрж╛ ржоржбрзЗрж▓) ржлрж╛ржЗрж▓ ржерзЗржХрзЗ ржЗржоржкрзЛрж░рзНржЯ
import 'model/product_model.dart';

// рзкя╕ПтГг рж╕ржм API рж▓рж┐ржВржХ (baseUrl, endpoints) рж░рж╛ржЦрж╛ utils/url.dart ржлрж╛ржЗрж▓ ржЗржоржкрзЛрж░рзНржЯ
import 'utils/url.dart';


// ЁЯФ╕ ProductApiController ржирж╛ржорзЗрж░ ржПржХржЯрж╛ ржХрзНрж▓рж╛рж╕ ржмрж╛ржирж╛ржирзЛ рж╣рзЯрзЗржЫрзЗ
class ProductApiController {

  // рзля╕ПтГг ржПржЦрж╛ржирзЗ ProductData ржЯрж╛ржЗржкрзЗрж░ ржПржХржЯрж╛ рж▓рж┐рж╕рзНржЯ рж░рж╛ржЦрж╛ рж╣ржЪрзНржЫрзЗ тАФ рж╕рж╛рж░рзНржнрж╛рж░ ржерзЗржХрзЗ ржкрж╛ржУрзЯрж╛ ржбрж╛ржЯрж╛ ржПрждрзЗ рж╕рзЗржн рж╣ржмрзЗ
  List<ProductData> productData = [];


  // ЁЯФ╣ рж╕рж╛рж░рзНржнрж╛рж░ ржерзЗржХрзЗ ржкрзНрж░рзЛржбрж╛ржХрзНржЯ ржбрж╛ржЯрж╛ ржЖржирж╛рж░ ржЬржирзНржп ржПржХржЯрж╛ Future ржлрж╛ржВрж╢ржи рждрзИрж░рж┐ ржХрж░рж╛ рж╣рж▓рзЛ
  Future fetchProduct() async {

    // рзмя╕ПтГг рж╕рж╛рж░рзНржнрж╛рж░рзЗ HTTP GET рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ ржкрж╛ржарж╛ржирзЛ рж╣ржЪрзНржЫрзЗ тАФ UrlAll.readProduct рж╣рж▓рзЛ Read API endpoint
    final response = await http.get(Uri.parse(UrlAll.readProduct));

    // рзня╕ПтГг ржпржжрж┐ рж╕рж╛рж░рзНржнрж╛рж░ рж╕ржарж┐ржХржнрж╛ржмрзЗ (statusCode 200) рж░рзЗрж╕ржкржирзНрж╕ ржжрзЗрзЯ
    if (response.statusCode == 200) {

      // рзоя╕ПтГг рж╕рж╛рж░рзНржнрж╛рж░ ржерзЗржХрзЗ ржкрж╛ржУрзЯрж╛ JSON string ржХрзЗ map ржЖржХрж╛рж░рзЗ рж░рзВржкрж╛ржирзНрждрж░ (decode) ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
      final data = jsonDecode(response.body);

      // рзпя╕ПтГг рж╕рзЗржЗ map ржбрж╛ржЯрж╛ ProductModel ржХрзНрж▓рж╛рж╕рзЗ ржкрж╛ржарж┐рзЯрзЗ model object ржмрж╛ржирж╛ржирзЛ рж╣ржЪрзНржЫрзЗ
      final productModel = ProductModel.fromJson(data);

      // ЁЯФЯ ProductModel ржерзЗржХрзЗ data рж▓рж┐рж╕рзНржЯржЯрж╛ productData рждрзЗ рж╕рзЗржн ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
      // ржпржжрж┐ null рж╣рзЯ, рждрж╛рж╣рж▓рзЗ ржЦрж╛рж▓рж┐ рж▓рж┐рж╕рзНржЯ ([]).
      productData = productModel.data ?? [];

    } else {
      // рззрззя╕ПтГг ржпржжрж┐ рж╕рж╛рж░рзНржнрж╛рж░ рзирзжрзж ржирж╛ ржжрзЗрзЯ, рждрж╛рж╣рж▓рзЗ error throw ржХрж░ржмрзЗ
      throw Exception("Failed to load products");
    }
  }
}
